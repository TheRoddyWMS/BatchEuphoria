# Adapted from https://circleci.com/docs/2.0/language-java/
version: 2.1
executors:
  docker-executor:
    docker:
      - image: cimg/openjdk:8.0.322
jobs: # a collection of steps
  build-and-test:
    environment:
      # Configure the JVM and Gradle to avoid OOM errors
      _JAVA_OPTIONS: "-Xmx1800m"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
    executor: docker-executor
    resource_class: small
    steps:
      - checkout # check out source code to working directory
      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
      - restore_cache:
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: v1-gradle-cache-{{ checksum "build.gradle" }}
      - run:
          name: Run tests
          command: |
            ./gradlew build test $GRADLE_ARGS
      - save_cache:
          paths:
            - ~/.gradle/wrapper
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - save_cache:
          paths:
            - ~/.gradle/caches
          key: v1-gradle-cache-{{ checksum "build.gradle" }}
      - store_test_results:
          # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: build/test-results/test
      - store_artifacts: # Upload test results for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: build/test-results/test
          when: always
      - persist_to_workspace: # Pass artifact over to next job via workspace.
          root: build/libs
          paths:
            - "*.jar"
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
  publish-github-release:  # https://circleci.com/blog/publishing-to-github-releases-via-circleci/
    docker:
      - image: cibuilds/github:0.13
    resource_class: small
    steps:
      - attach_workspace:
          at: build/libs
      - run:
          name: "Publish Release on GitHub"
          command: |
            VERSION=$(ls ./build/libs/*.jar | sed -r 's/.*BatchEuphoria-([[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+(-.+)?).jar/\1/')
            ghr -t "$GITHUB_TOKEN" -u "$CIRCLE_PROJECT_USERNAME" -r "$CIRCLE_PROJECT_REPONAME" -c "$CIRCLE_SHA1" -n "$VERSION" -delete "$VERSION" ./build/libs/*.jar

workflows:
  version: 2
  build:
    jobs:
      - build-and-test
  release:
    jobs:
      - build-and-test:
          filters:
            branches:  # ignore any commit on any branch by default
              ignore: /.*/
            tags:  # unless they match the pattern
              only: /^\d+\.\d+\.\d+$/
      - publish-github-release:
          context:
            - TheRoddyWMS
          requires:
            - build-and-test
          filters:
            branches:  # ignore any commit on any branch by default
              ignore: /.*/
            tags:  # unless they match the pattern
              only: /^\d+\.\d+\.\d+$/
